{"ast":null,"code":"var _jsxFileName = \"/Users/Luis/Desktop/proyecto/interfacez/src/components/Contact.js\";\nimport React, { Fragment, useState } from 'react';\nimport { registar_datos } from '../servicios/contactServicio';\nimport Swal from 'sweetalert2';\n\nconst Contact = () => {\n  // crear State\n  const [contact, actualizarContact] = useState({\n    name: '',\n    email: '',\n    phoneNumber: '',\n    message: ''\n  }); //Escribir en campo correspondiente en el state\n\n  const actualizarState = e => {\n    actualizarContact({ ...contact,\n      [e.target.name]: e.target.value\n    });\n  }; // Extraer los datos\n\n\n  const {\n    name,\n    email,\n    phoneNumber,\n    message\n  } = contact; // validar formulario\n\n  const validar = () => {\n    let err = false;\n    let inputRequeridos = document.querySelectorAll('[required]');\n    let counter = inputRequeridos.length;\n\n    for (let i = 0; i < counter; i++) {\n      if (inputRequeridos[i].value == '') {\n        err = true;\n        inputRequeridos[i].classList.add('error');\n      } else {\n        inputRequeridos[i].classList.remove('error');\n      }\n    }\n\n    return err;\n  }; // eviar los datos\n\n\n  const submitContact = e => {\n    e.preventDefault();\n    let err = validar();\n    let verificar = true;\n    let expRegName = /^[a-zA-ZÑñÁáÉéÍíÓóÚúÜü\\s]+$/;\n    let expRegphoneNumber = /[0-9(-)0-9]/;\n    let expRegEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\n    if (err === true) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Revise que los campos esten llenos'\n      });\n      verificar = false;\n    } else if (!expRegName.exec(name)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El campo name solo acepta letras y espacios'\n      });\n      verificar = false;\n    } else if (!expRegEmail.exec(email)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El campo email no es valido'\n      });\n      verificar = false;\n    } else if (!expRegphoneNumber.exec(phoneNumber)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El campo phoneNumber dolo acepta numeros'\n      });\n      verificar = false;\n    } else {\n      registar_datos(contact.name, contact.email, contact.phoneNumber, contact.message);\n    }\n\n    actualizarContact({\n      name: '',\n      email: '',\n      phoneNumber: '',\n      message: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"CONTACT ME\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"nameTxt\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    className: \"border-input\",\n    onChange: actualizarState,\n    value: name,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"emailTxt\",\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    className: \"border-input\",\n    onChange: actualizarState,\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phoneNumberTxt\",\n    name: \"phoneNumber\",\n    type: \"tel\",\n    placeholder: \"Phone Number\",\n    className: \"border-input\",\n    onChange: actualizarState,\n    value: phoneNumber,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"messageTxt\",\n    name: \"message\",\n    type: \"Message\",\n    placeholder: \"Message\",\n    className: \"border-input\",\n    onChange: actualizarState,\n    value: message,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"btnSend\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"SEND\")))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/Users/Luis/Desktop/proyecto/interfacez/src/components/Contact.js"],"names":["React","Fragment","useState","registar_datos","Swal","Contact","contact","actualizarContact","name","email","phoneNumber","message","actualizarState","e","target","value","validar","err","inputRequeridos","document","querySelectorAll","counter","length","i","classList","add","remove","submitContact","preventDefault","verificar","expRegName","expRegphoneNumber","expRegEmail","fire","icon","title","text","exec"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { registar_datos } from '../servicios/contactServicio';\nimport Swal from 'sweetalert2';\n\nconst Contact = () => {\n  // crear State\n  const [contact, actualizarContact] = useState({\n    name: '',\n    email: '',\n    phoneNumber: '',\n    message: '',\n  });\n\n  //Escribir en campo correspondiente en el state\n  const actualizarState = (e) => {\n    actualizarContact({\n      ...contact,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Extraer los datos\n  const { name, email, phoneNumber, message } = contact;\n\n  // validar formulario\n  const validar = () => {\n    let err = false;\n    let inputRequeridos = document.querySelectorAll('[required]');\n    let counter = inputRequeridos.length;\n\n    for (let i = 0; i < counter; i++) {\n      if (inputRequeridos[i].value == '') {\n        err = true;\n        inputRequeridos[i].classList.add('error');\n      } else {\n        inputRequeridos[i].classList.remove('error');\n      }\n    }\n    return err;\n  };\n  // eviar los datos\n  const submitContact = (e) => {\n    e.preventDefault();\n    let err = validar();\n    let verificar = true;\n    let expRegName = /^[a-zA-ZÑñÁáÉéÍíÓóÚúÜü\\s]+$/;\n    let expRegphoneNumber = /[0-9(-)0-9]/;\n    let expRegEmail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\n    if (err === true) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Revise que los campos esten llenos',\n      });\n      verificar = false;\n    } else if (!expRegName.exec(name)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El campo name solo acepta letras y espacios',\n      });\n\n      verificar = false;\n    } else if (!expRegEmail.exec(email)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El campo email no es valido',\n      });\n\n      verificar = false;\n    } else if (!expRegphoneNumber.exec(phoneNumber)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El campo phoneNumber dolo acepta numeros',\n      });\n\n      verificar = false;\n    } else {\n      registar_datos(\n        contact.name,\n        contact.email,\n        contact.phoneNumber,\n        contact.message\n      );\n    }\n\n    actualizarContact({\n      name: '',\n      email: '',\n      phoneNumber: '',\n      message: '',\n    });\n  };\n\n  return (\n    <Fragment>\n      <section id='contact'>\n        <h2>CONTACT ME</h2>\n        <form onSubmit={submitContact}>\n          <div>\n            <input\n              id='nameTxt'\n              name='name'\n              type='text'\n              placeholder='Name'\n              className='border-input'\n              onChange={actualizarState}\n              value={name}\n              required\n            />\n          </div>\n          <div>\n            <input\n              id='emailTxt'\n              name='email'\n              type='email'\n              placeholder='Email'\n              className='border-input'\n              onChange={actualizarState}\n              value={email}\n              required\n            />\n          </div>\n          <div>\n            <input\n              id='phoneNumberTxt'\n              name='phoneNumber'\n              type='tel'\n              placeholder='Phone Number'\n              className='border-input'\n              onChange={actualizarState}\n              value={phoneNumber}\n              required\n            />\n          </div>\n          <div>\n            <input\n              id='messageTxt'\n              name='message'\n              type='Message'\n              placeholder='Message'\n              className='border-input'\n              onChange={actualizarState}\n              value={message}\n              required\n            />\n          </div>\n          <div>\n            <button id='btnSend' type='submit'>\n              SEND\n            </button>\n          </div>\n        </form>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}